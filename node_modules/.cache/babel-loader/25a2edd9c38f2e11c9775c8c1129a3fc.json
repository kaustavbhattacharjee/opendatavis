{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js\";\nimport React, { Component } from 'react';\nimport Piechart from './Piechart';\nimport Listtest from './listtest';\nimport Row from './row';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset1: ['A', 'B', 'C', 'D'],\n      dataset2: ['A', 'CC', 'BB', 'DD', 'EE', 'A', 'BB', 'CC', 'DD', 'EE', 'A', 'BB', 'CC', 'DD', 'EE'],\n      dataset3: ['AAA', 'BBBB', 'C', 'DD', 'EE', 'AAA', 'BBBB', 'C', 'DD', 'EE', 'AAA', 'BBBB', 'C', 'DD', 'EE'],\n      cdata: ['A', 'B', 'C', 'D', 'EE', 'CC', 'DD', 'A', 'EE', 'CC', 'DD', 'A', 'EE', 'CC', 'DD'],\n      idata: ['A', 'BB', 'C'],\n      myrect: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.rowgen = this.rowgen.bind(this);\n  }\n\n  //----------------------------------------------------Handle click starts here\n  handleClick(d) {\n    this.setState(prevState => ({\n      idata: [...prevState.idata, d]\n    }));\n    this.rowgen(this.state.idata, \"Dataset1\", this.state.dataset1);\n  } //----------------------------------------------------Row generator starts here\n\n\n  rowgen(idata, datasetname, data) {\n    var myrows = [];\n    var temp;\n\n    for (var j = 0; j < data.length; j++) {\n      var flag = false; //console.log(this.props.data[j])\n\n      for (var i = 0; i < idata.length; i++) {\n        if (data[j] == idata[i]) {\n          flag = true;\n        }\n      }\n\n      if (flag == true) {\n        temp = React.createElement(\"rect\", {\n          key: j,\n          fill: \"red\",\n          x: j * 18,\n          y: 0,\n          width: \"18\",\n          height: \"18\",\n          strokeWidth: \".1\",\n          stroke: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \" \");\n      } else {\n        temp = React.createElement(\"rect\", {\n          key: j,\n          fill: \"white\",\n          x: j * 18,\n          y: 0,\n          width: \"18\",\n          height: \"18\",\n          strokeWidth: \".1\",\n          stroke: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \" \");\n      }\n\n      myrows.push(temp);\n    }\n\n    this.setState(prevState => ({\n      myrect: [...prevState.myrect, myrows]\n    }));\n  } //----------------------------------------------------Row generator ends here\n\n\n  render() {\n    const width = 960;\n    const height = 26; //console.log(this.state.datasets)\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.cdata.map((d, i) => React.createElement(\"text\", {\n      key: i,\n      x: i * 30,\n      y: 20,\n      width: \"38\",\n      height: \"26\",\n      strokeWidth: \".1\",\n      stroke: \"black\",\n      onClick: () => this.handleClick(d),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, d))), React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.idata.map((d, i) => React.createElement(\"text\", {\n      key: i,\n      x: i * 30,\n      y: 20,\n      width: \"38\",\n      height: \"26\",\n      strokeWidth: \".1\",\n      stroke: \"black\",\n      onClick: () => this.handleClick(d),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, d)))), this.state.myrect);\n  }\n\n}\n\nexport default App; //https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/","map":{"version":3,"sources":["/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js"],"names":["React","Component","Piechart","Listtest","Row","App","constructor","props","state","dataset1","dataset2","dataset3","cdata","idata","myrect","handleClick","bind","rowgen","d","setState","prevState","datasetname","data","myrows","temp","j","length","flag","i","push","render","width","height","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,WAAP;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CADC;AAEXC,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAK,IAAL,EAAU,IAAV,EAAe,IAAf,EAAoB,IAApB,EAAyB,GAAzB,EAA6B,IAA7B,EAAkC,IAAlC,EAAuC,IAAvC,EAA4C,IAA5C,EAAiD,GAAjD,EAAqD,IAArD,EAA0D,IAA1D,EAA+D,IAA/D,EAAoE,IAApE,CAFC;AAGXC,MAAAA,QAAQ,EAAE,CAAC,KAAD,EAAO,MAAP,EAAc,GAAd,EAAkB,IAAlB,EAAuB,IAAvB,EAA4B,KAA5B,EAAkC,MAAlC,EAAyC,GAAzC,EAA6C,IAA7C,EAAkD,IAAlD,EAAuD,KAAvD,EAA6D,MAA7D,EAAoE,GAApE,EAAwE,IAAxE,EAA6E,IAA7E,CAHC;AAIXC,MAAAA,KAAK,EAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,IAAjB,EAAsB,IAAtB,EAA2B,IAA3B,EAAgC,GAAhC,EAAoC,IAApC,EAAyC,IAAzC,EAA8C,IAA9C,EAAmD,GAAnD,EAAuD,IAAvD,EAA4D,IAA5D,EAAiE,IAAjE,CAJK;AAKXC,MAAAA,KAAK,EAAC,CAAC,GAAD,EAAK,IAAL,EAAU,GAAV,CALK;AAMXC,MAAAA,MAAM,EAAC;AANI,KAAb;AAQA,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AACA,SAAKC,MAAL,GAAY,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAZ;AACD;;AACD;AACAD,EAAAA,WAAW,CAACG,CAAD,EAAG;AACZ,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BP,MAAAA,KAAK,EAAE,CAAC,GAAGO,SAAS,CAACP,KAAd,EAAqBK,CAArB;AADmB,KAAL,CAAvB;AAGA,SAAKD,MAAL,CAAY,KAAKT,KAAL,CAAWK,KAAvB,EAA6B,UAA7B,EAAwC,KAAKL,KAAL,CAAWC,QAAnD;AACD,GApB2B,CAqB5B;;;AACAQ,EAAAA,MAAM,CAACJ,KAAD,EAAOQ,WAAP,EAAmBC,IAAnB,EAAwB;AAC5B,QAAIC,MAAM,GAAC,EAAX;AACE,QAAIC,IAAJ;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,IAAI,CAACI,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC1B,UAAIE,IAAI,GAAC,KAAT,CAD0B,CAE1B;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACf,KAAK,CAACa,MAApB,EAA2BE,CAAC,EAA5B,EAA+B;AAC3B,YAAGN,IAAI,CAACG,CAAD,CAAJ,IAASZ,KAAK,CAACe,CAAD,CAAjB,EAAqB;AAAED,UAAAA,IAAI,GAAC,IAAL;AAAY;AACtC;;AACD,UAAGA,IAAI,IAAE,IAAT,EAAc;AACVH,QAAAA,IAAI,GAAC;AAAM,UAAA,GAAG,EAAEC,CAAX;AAAc,UAAA,IAAI,EAAC,KAAnB;AAAyB,UAAA,CAAC,EAAEA,CAAC,GAAC,EAA9B;AAAkC,UAAA,CAAC,EAAE,CAArC;AAAwC,UAAA,KAAK,EAAC,IAA9C;AAAmD,UAAA,MAAM,EAAC,IAA1D;AAA+D,UAAA,WAAW,EAAC,IAA3E;AAAgF,UAAA,MAAM,EAAC,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL;AACH,OAFD,MAGI;AACAD,QAAAA,IAAI,GAAC;AAAM,UAAA,GAAG,EAAEC,CAAX;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,CAAC,EAAEA,CAAC,GAAC,EAAhC;AAAoC,UAAA,CAAC,EAAE,CAAvC;AAA0C,UAAA,KAAK,EAAC,IAAhD;AAAqD,UAAA,MAAM,EAAC,IAA5D;AAAiE,UAAA,WAAW,EAAC,IAA7E;AAAkF,UAAA,MAAM,EAAC,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL;AACH;;AACDF,MAAAA,MAAM,CAACM,IAAP,CAAYL,IAAZ;AACH;;AACH,SAAKL,QAAL,CAAcC,SAAS,KAAK;AAC1BN,MAAAA,MAAM,EAAE,CAAC,GAAGM,SAAS,CAACN,MAAd,EAAsBS,MAAtB;AADkB,KAAL,CAAvB;AAGD,GA1C2B,CA2C5B;;;AACEO,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,GAAd;AACA,UAAMC,MAAM,GAAG,EAAf,CAFO,CAGP;;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAED,KAAZ;AAAmB,MAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKxB,KAAL,CAAWI,KAAX,CAAiBqB,GAAjB,CAAqB,CAACf,CAAD,EAAIU,CAAJ,KAAW;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,CAAC,EAAEA,CAAC,GAAC,EAAnB;AAAuB,MAAA,CAAC,EAAE,EAA1B;AAA8B,MAAA,KAAK,EAAC,IAApC;AAAyC,MAAA,MAAM,EAAC,IAAhD;AAAqD,MAAA,WAAW,EAAC,IAAjE;AAAsE,MAAA,MAAM,EAAC,OAA7E;AAAqF,MAAA,OAAO,EAAE,MAAM,KAAKb,WAAL,CAAiBG,CAAjB,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0HA,CAA1H,CAAhC,CAFF,CADA,EAMA;AAAK,MAAA,KAAK,EAAEa,KAAZ;AAAmB,MAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKxB,KAAL,CAAWK,KAAX,CAAiBoB,GAAjB,CAAqB,CAACf,CAAD,EAAIU,CAAJ,KAAW;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,CAAC,EAAEA,CAAC,GAAC,EAAnB;AAAuB,MAAA,CAAC,EAAE,EAA1B;AAA8B,MAAA,KAAK,EAAC,IAApC;AAAyC,MAAA,MAAM,EAAC,IAAhD;AAAqD,MAAA,WAAW,EAAC,IAAjE;AAAsE,MAAA,MAAM,EAAC,OAA7E;AAAqF,MAAA,OAAO,EAAE,MAAM,KAAKb,WAAL,CAAiBG,CAAjB,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0HA,CAA1H,CAAhC,CAFF,CANA,CADF,EAaG,KAAKV,KAAL,CAAWM,MAbd,CADF;AAiBD;;AAjEyB;;AAmE5B,eAAeT,GAAf,C,CAKA","sourcesContent":["import React, { Component } from 'react';\nimport Piechart from './Piechart';\nimport Listtest from './listtest';\nimport Row from './row';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    dataset1: ['A','B','C','D'],\n    dataset2: ['A','CC','BB','DD','EE','A','BB','CC','DD','EE','A','BB','CC','DD','EE'],\n    dataset3: ['AAA','BBBB','C','DD','EE','AAA','BBBB','C','DD','EE','AAA','BBBB','C','DD','EE'],\n    cdata:['A','B','C','D','EE','CC','DD','A','EE','CC','DD','A','EE','CC','DD'],\n    idata:['A','BB','C'],\n    myrect:[]\n  }\n  this.handleClick=this.handleClick.bind(this);\n  this.rowgen=this.rowgen.bind(this);\n};\n//----------------------------------------------------Handle click starts here\nhandleClick(d){\n  this.setState(prevState => ({\n    idata: [...prevState.idata, d] \n  }));\n  this.rowgen(this.state.idata,\"Dataset1\",this.state.dataset1)\n}\n//----------------------------------------------------Row generator starts here\nrowgen(idata,datasetname,data){\n  var myrows=[];\n    var temp;\n    for(var j=0;j<data.length;j++){\n        var flag=false;\n        //console.log(this.props.data[j])\n        for(var i=0;i<idata.length;i++){\n            if(data[j]==idata[i]){ flag=true; } \n        }\n        if(flag==true){\n            temp=<rect key={j} fill=\"red\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n        }\n        else{\n            temp=<rect key={j} fill=\"white\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n        }\n        myrows.push(temp);\n    }\n  this.setState(prevState => ({\n    myrect: [...prevState.myrect, myrows] \n  }));\n}\n//----------------------------------------------------Row generator ends here\n  render() {\n    const width = 960;\n    const height = 26;\n    //console.log(this.state.datasets)\n    return (\n      <div className=\"App\">\n        <div className=\"Cell\">\n        <svg width={width} height={height}>  \n        {\n          this.state.cdata.map((d, i) => (<text key={i} x={i*30} y={20} width='38' height=\"26\" strokeWidth=\".1\" stroke=\"black\" onClick={() => this.handleClick(d)}>{d}</text>))\n        }\n        </svg>\n        <svg width={width} height={height}>  \n        {\n          this.state.idata.map((d, i) => (<text key={i} x={i*30} y={20} width='38' height=\"26\" strokeWidth=\".1\" stroke=\"black\" onClick={() => this.handleClick(d)}>{d}</text>))\n        }\n        </svg> \n        </div>\n        {this.state.myrect}\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n\n//https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/\n"]},"metadata":{},"sourceType":"module"}