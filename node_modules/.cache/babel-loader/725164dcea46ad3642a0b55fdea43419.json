{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/row.js\";\nimport React, { Component } from 'react';\n\nclass Row extends Component {\n  constructor(someProp) {\n    super();\n    this.state = {\n      items: [],\n      rows: [],\n      idata: ['A'],\n      allatt: []\n    };\n    this.rowgen = this.rowgen.bind(this);\n    this.groupgen = this.groupgen.bind(this);\n  } //--------------------------------------------------------RowGenerator starts here\n\n\n  rowgen() {\n    this.setState({\n      allatt: this.props.allatt\n    });\n    var myrows = [];\n    var temp;\n    const width = 960;\n    const height = 16;\n    console.log(\"From row\", this.props.idata);\n\n    for (var j = 0; j < this.props.allatt.length; j++) {\n      var flag = false; //console.log(this.props.data[j])\n\n      for (var i = 0; i < this.props.data.length; i++) {\n        if (this.props.allatt[j] == this.props.data[i]) {\n          flag = true;\n        }\n      }\n\n      if (flag == true) {\n        temp = React.createElement(\"rect\", {\n          key: j,\n          fill: \"#c994c7\",\n          x: j * 18,\n          y: 0,\n          width: \"18\",\n          height: \"18\",\n          strokeWidth: \".1\",\n          stroke: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \" \");\n      } else {\n        temp = React.createElement(\"rect\", {\n          key: j,\n          fill: \"#f0f0f0\",\n          x: j * 18,\n          y: 0,\n          width: \"18\",\n          height: \"18\",\n          strokeWidth: \".1\",\n          stroke: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" \");\n      }\n\n      myrows.push(temp);\n    }\n\n    var myrows2 = React.createElement(\"div\", {\n      className: \"Table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.dataset), React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, myrows))));\n    this.setState({\n      rows: myrows2\n    });\n  } //--------------------------------------------------------GroupGenerator starts here\n\n\n  groupgen() {\n    console.log(this.state.allatt);\n  }\n\n  componentDidMount() {\n    if (this.props.gg == \"tr\") {\n      this.groupgen();\n    } else {\n      this.rowgen();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.rows);\n  }\n\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/row.js"],"names":["React","Component","Row","constructor","someProp","state","items","rows","idata","allatt","rowgen","bind","groupgen","setState","props","myrows","temp","width","height","console","log","j","length","flag","i","data","push","myrows2","dataset","componentDidMount","gg","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nclass Row extends Component{\nconstructor(someProp) {\n    super();\n    this.state={items:[],rows:[],idata:['A'],allatt:[]}\n    this.rowgen=this.rowgen.bind(this);  \n    this.groupgen=this.groupgen.bind(this);  \n    }\n//--------------------------------------------------------RowGenerator starts here\nrowgen(){\n    this.setState({allatt:this.props.allatt});\n    var myrows=[];\n    var temp;\n    const width = 960;\n    const height = 16;\n    console.log(\"From row\",this.props.idata)\n    for(var j=0;j<this.props.allatt.length;j++){\n        var flag=false;\n        //console.log(this.props.data[j])\n        for(var i=0;i<this.props.data.length;i++){\n            if(this.props.allatt[j]==this.props.data[i]){ flag=true; } \n        }\n        if(flag==true){\n            temp=<rect key={j} fill=\"#c994c7\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n        }\n        else{\n            temp=<rect key={j} fill=\"#f0f0f0\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n        }\n        myrows.push(temp);\n    }\n    var myrows2= \n    <div className=\"Table\">\n    <div className=\"Row\">\n        <div className=\"Cell\">\n        {this.props.dataset}\n        </div>\n        <div className=\"Cell\">\n        <svg width={width} height={height}> \n        {\n        myrows\n        }\n        </svg>\n        </div>\n    </div>\n    </div>  \n    this.setState({rows:myrows2})\n}\n//--------------------------------------------------------GroupGenerator starts here\ngroupgen(){\nconsole.log(this.state.allatt);\n}\n\ncomponentDidMount() {\n    if(this.props.gg==\"tr\"){\n        this.groupgen();\n    }\n    else{\n        this.rowgen()\n    }\n}\nrender(){\nreturn(\n<div>\n    {this.state.rows}\n</div>\n)\n}}\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}