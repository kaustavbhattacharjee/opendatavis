{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/row.js\";\nimport React, { Component } from 'react';\n\nclass Row extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      rows: []\n    };\n    this.rowgen = this.rowgen.bind(this);\n  }\n\n  rowgen() {\n    var myrows = [];\n    var temp;\n    var index = 0;\n\n    for (var j = 0; j < this.props.data.length; j++) {\n      //console.log(this.props.data[j])\n      for (var i = 0; i < this.props.idata.length; i++) {\n        index++;\n        console.log(this.props.data[j], index, \"--\", this.props.idata[i]);\n\n        if (this.props.idata[i] == this.props.data[j]) {\n          //console.log(j,\"From if\",this.props.data[j])\n          temp = React.createElement(\"rect\", {\n            key: index,\n            fill: \"white\",\n            x: j * 18,\n            y: 0,\n            width: \"18\",\n            height: \"18\",\n            strokeWidth: \".1\",\n            stroke: \"black\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, \" \");\n          myrows.push(temp);\n        } else {\n          //console.log(j,\"From else\",this.props.data[j])\n          temp = React.createElement(\"rect\", {\n            key: j,\n            fill: \"white\",\n            x: j * 18,\n            y: 0,\n            width: \"18\",\n            height: \"18\",\n            strokeWidth: \".1\",\n            stroke: \"black\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, \" \");\n          myrows.push(temp);\n        }\n      }\n    }\n\n    this.setState({\n      rows: myrows\n    });\n    console.log(this.state.rows); //this.props.data.map((d, i) => (<rect key={i} fill=\"white\" x={i*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>))\n  }\n\n  render() {\n    const width = 960;\n    const height = 16;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.dataset), React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.rows)))), React.createElement(\"button\", {\n      onClick: this.rowgen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Click\"));\n  }\n\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/row.js"],"names":["React","Component","Row","constructor","props","state","items","rows","rowgen","bind","myrows","temp","index","j","data","length","i","idata","console","log","push","setState","render","width","height","dataset"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nclass Row extends Component{\nconstructor(props) {\n    super(props);\n    this.state={items:[],rows:[]}\n    this.rowgen=this.rowgen.bind(this);  \n    }\nrowgen(){\n    var myrows=[];\n    var temp;\n    var index=0;\n    for(var j=0;j<this.props.data.length;j++){\n        //console.log(this.props.data[j])\n        \n        for(var i=0;i<this.props.idata.length;i++){\n            index++;\n            console.log(this.props.data[j],index,\"--\",this.props.idata[i])\n            if(this.props.idata[i]==this.props.data[j]){\n                //console.log(j,\"From if\",this.props.data[j])\n                temp=<rect key={index} fill=\"white\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n                myrows.push(temp);\n            }\n            else{\n                //console.log(j,\"From else\",this.props.data[j])\n                temp=<rect key={j} fill=\"white\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n                myrows.push(temp);\n            }\n        }\n    }\n    this.setState({rows:myrows})\n    console.log(this.state.rows)\n    //this.props.data.map((d, i) => (<rect key={i} fill=\"white\" x={i*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>))\n}\nrender(){\n    const width = 960;\n    const height = 16;\nreturn(\n<div>\n    <div className=\"Table\">\n        <div className=\"Row\">\n            <div className=\"Cell\">\n            {this.props.dataset}\n            </div>\n            <div className=\"Cell\">\n            <svg width={width} height={height}> \n            {\n            this.state.rows\n            }\n            </svg>\n            </div>\n        </div>\n    </div> \n    <button onClick={this.rowgen}>Click</button>      \n</div>\n)\n}}\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}