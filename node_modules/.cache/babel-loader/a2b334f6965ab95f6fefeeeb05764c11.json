{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js\";\nimport React, { Component } from 'react';\nimport Piechart from './Piechart';\nimport Listtest from './listtest';\nimport Row from './row';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.idata = [];\n    this.state = {\n      dataset1: ['A', 'B', 'C', 'D'],\n      dataset2: ['A', 'CC', 'BB', 'DD', 'EE', 'A', 'BB', 'CC', 'DD', 'EE', 'A', 'BB', 'CC', 'DD', 'EE'],\n      dataset3: ['AAA', 'BBBB', 'C', 'DD', 'EE', 'AAA', 'BBBB', 'C', 'DD', 'EE', 'AAA', 'BBBB', 'C', 'DD', 'EE'],\n      cdata: ['A', 'B', 'C', 'D', 'EE', 'CC', 'DD', 'A', 'EE', 'CC', 'DD', 'A', 'EE', 'CC', 'DD'],\n      idata: ['A'],\n      myrect: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.rowgen = this.rowgen.bind(this);\n  }\n\n  handleClick(d) {\n    this.idata = idata.push(d);\n    console.log('From parant component', this.idata);\n    this.rowgen(idata, \"Dataset1\", this.state.dataset1);\n  } //----------------------------------------------------Row generator starts here\n\n\n  rowgen(idata, datasetname, dataset) {\n    var a = [];\n    a.push(React.createElement(Row, {\n      idata: idata,\n      dataset: datasetname,\n      data: dataset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n    this.setState(prevState => ({\n      myrect: [...prevState.myrect, a]\n    }));\n  } //----------------------------------------------------Row generator ends here\n\n\n  render() {\n    const width = 960;\n    const height = 26; //console.log(this.state.datasets)\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.cdata.map((d, i) => React.createElement(\"text\", {\n      key: i,\n      x: i * 30,\n      y: 20,\n      width: \"38\",\n      height: \"26\",\n      strokeWidth: \".1\",\n      stroke: \"black\",\n      onClick: () => this.handleClick(d),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, d))), React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.idata.map((d, i) => React.createElement(\"text\", {\n      key: i,\n      x: i * 30,\n      y: 20,\n      width: \"38\",\n      height: \"26\",\n      strokeWidth: \".1\",\n      stroke: \"black\",\n      onClick: () => this.handleClick(d),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, d)))), this.state.myrect);\n  }\n\n}\n\nexport default App; //https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/","map":{"version":3,"sources":["/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js"],"names":["React","Component","Piechart","Listtest","Row","App","constructor","props","idata","state","dataset1","dataset2","dataset3","cdata","myrect","handleClick","bind","rowgen","d","push","console","log","datasetname","dataset","a","setState","prevState","render","width","height","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Piechart from './Piechart';\nimport Listtest from './listtest';\nimport Row from './row';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    dataset1: ['A','B','C','D'],\n    dataset2: ['A','CC','BB','DD','EE','A','BB','CC','DD','EE','A','BB','CC','DD','EE'],\n    dataset3: ['AAA','BBBB','C','DD','EE','AAA','BBBB','C','DD','EE','AAA','BBBB','C','DD','EE'],\n    cdata:['A','B','C','D','EE','CC','DD','A','EE','CC','DD','A','EE','CC','DD'],\n    idata:['A'],\n    myrect:[]\n  }\n  this.handleClick=this.handleClick.bind(this);\n  this.rowgen=this.rowgen.bind(this);\n};\nidata=[];\nhandleClick(d){  \n  this.idata=idata.push(d);\n  console.log('From parant component',this.idata);\n  this.rowgen(idata,\"Dataset1\",this.state.dataset1)\n}\n//----------------------------------------------------Row generator starts here\nrowgen(idata,datasetname,dataset){\n  var a=[];\n  a.push(<Row idata={idata} dataset={datasetname} data={dataset}/>)\n  this.setState(prevState => ({\n    myrect: [...prevState.myrect, a] \n  }));\n}\n//----------------------------------------------------Row generator ends here\n  render() {\n    const width = 960;\n    const height = 26;\n    //console.log(this.state.datasets)\n    return (\n      <div className=\"App\">\n        <div className=\"Cell\">\n        <svg width={width} height={height}>  \n        {\n          this.state.cdata.map((d, i) => (<text key={i} x={i*30} y={20} width='38' height=\"26\" strokeWidth=\".1\" stroke=\"black\" onClick={() => this.handleClick(d)}>{d}</text>))\n        }\n        </svg>\n        <svg width={width} height={height}>  \n        {\n          this.state.idata.map((d, i) => (<text key={i} x={i*30} y={20} width='38' height=\"26\" strokeWidth=\".1\" stroke=\"black\" onClick={() => this.handleClick(d)}>{d}</text>))\n        }\n        </svg> \n        </div>\n        {this.state.myrect}\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n\n//https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/\n"]},"metadata":{},"sourceType":"module"}