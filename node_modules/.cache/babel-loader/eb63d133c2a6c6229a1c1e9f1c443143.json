{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/row.js\";\nimport React, { Component } from 'react';\n\nclass Row extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      rows: [],\n      idata: []\n    };\n    this.rowgen = this.rowgen.bind(this);\n  }\n\n  rowgen() {\n    var myrows = [];\n    var temp;\n\n    for (var j = 0; j < this.props.data.length; j++) {\n      var flag = false; //console.log(this.props.data[j])\n\n      for (var i = 0; i < this.props.idata.length; i++) {\n        if (this.props.data[j] == this.props.idata[i]) {\n          flag = true;\n        }\n      }\n\n      if (flag == true) {\n        temp = React.createElement(\"rect\", {\n          key: j,\n          fill: \"red\",\n          x: j * 18,\n          y: 0,\n          width: \"18\",\n          height: \"18\",\n          strokeWidth: \".1\",\n          stroke: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \" \");\n      } else {\n        temp = React.createElement(\"rect\", {\n          key: j,\n          fill: \"white\",\n          x: j * 18,\n          y: 0,\n          width: \"18\",\n          height: \"18\",\n          strokeWidth: \".1\",\n          stroke: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \" \");\n      }\n\n      myrows.push(temp);\n    }\n\n    this.setState({\n      rows: myrows\n    });\n  }\n\n  componentDidMount() {\n    this.rowgen();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      idata: nextProps\n    });\n  }\n\n  render() {\n    const width = 960;\n    const height = 16;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.dataset), React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.rows)))));\n  }\n\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/row.js"],"names":["React","Component","Row","constructor","props","state","items","rows","idata","rowgen","bind","myrows","temp","j","data","length","flag","i","push","setState","componentDidMount","componentWillReceiveProps","nextProps","render","width","height","dataset"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nclass Row extends Component{\nconstructor(props) {\n    super(props);\n    this.state={items:[],rows:[],idata:[]}\n    this.rowgen=this.rowgen.bind(this);  \n    }\nrowgen(){\n    var myrows=[];\n    var temp;\n    for(var j=0;j<this.props.data.length;j++){\n        var flag=false;\n        //console.log(this.props.data[j])\n        for(var i=0;i<this.props.idata.length;i++){\n            if(this.props.data[j]==this.props.idata[i]){ flag=true; } \n        }\n        if(flag==true){\n            temp=<rect key={j} fill=\"red\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n        }\n        else{\n            temp=<rect key={j} fill=\"white\" x={j*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>;\n        }\n        myrows.push(temp);\n    }\n    this.setState({rows:myrows})\n}\ncomponentDidMount() {\n    this.rowgen()\n}\ncomponentWillReceiveProps(nextProps) {\n    this.setState({idata: nextProps});\n}\nrender(){\n    const width = 960;\n    const height = 16;\nreturn(\n<div>\n    <div className=\"Table\">\n        <div className=\"Row\">\n            <div className=\"Cell\">\n            {this.props.dataset}\n            </div>\n            <div className=\"Cell\">\n            <svg width={width} height={height}> \n            {\n            this.state.rows\n            }\n            </svg>\n            </div>\n        </div>\n    </div> \n</div>\n)\n}}\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}