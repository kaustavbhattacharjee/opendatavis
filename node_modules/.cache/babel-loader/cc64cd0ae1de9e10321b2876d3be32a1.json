{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/Work-Projects/reorderable_matrix/src/Barchart.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\n\nclass Barchart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 200,\n      height: 100\n    };\n  } //---------------------------------------------------------------------------createBarchart starts here\n\n\n  createBarchart() {\n    const node = this.node;\n    var dataset = this.props.dataset;\n    var margin = 10;\n    var h = this.state.height - margin;\n    var w = this.state.width;\n    var rectwidth = w / dataset.length - .4;\n    const xScale = d3.scale.linear().domain([0, dataset.length]).range([0, w]);\n    const yScale = d3.scale.linear().domain([0, 1]).range([0, h]);\n    const svg = d3.select(node).append(\"svg\").attr('height', h).attr('width', w);\n    svg.selectAll('rect').data(dataset).enter().append('rect').attr(\"x\", function (d, i) {\n      return xScale(i);\n    }).attr(\"y\", function (d) {\n      return h - yScale(d);\n    }).attr(\"width\", rectwidth).attr(\"height\", function (d, i) {\n      return yScale(d);\n    }).attr('fill', \"green\"); //---------------------------------------------------------\n\n    d3.select(node).append(\"text\").attr(\"x\", w / 2).attr(\"y\", h + margin - 2).style(\"text-anchor\", \"middle\").style(\"font-size\", \".6em\").text(this.props.Aname); //Define Y axis\n\n    var yAxis = d3.svg.axis().scale(yScale).tickFormat(function (d) {\n      return d;\n    }).orient(\"left\"); //Create Y axis\n\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);\n  }\n\n  componentDidMount() {\n    this.createBarchart();\n  }\n\n  componentDidUpdate() {\n    this.createBarchart();\n  }\n\n  render() {\n    return React.createElement(\"svg\", {\n      ref: node => this.node = node,\n      width: this.state.width,\n      height: this.state.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Barchart;","map":{"version":3,"sources":["/Users/kaustav/Work-Projects/reorderable_matrix/src/Barchart.js"],"names":["React","Component","d3","Barchart","constructor","props","state","width","height","createBarchart","node","dataset","margin","h","w","rectwidth","length","xScale","scale","linear","domain","range","yScale","svg","select","append","attr","selectAll","data","enter","d","i","style","text","Aname","yAxis","axis","tickFormat","orient","call","componentDidMount","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport * as d3 from 'd3'\nclass Barchart extends Component {\n   constructor(props){\n      super(props)\n      this.state={\n        width:200,\n        height:100,\n      }\n    }\n//---------------------------------------------------------------------------createBarchart starts here\n  createBarchart(){\nconst node = this.node\nvar dataset=this.props.dataset;\nvar margin=10;\nvar h=this.state.height - margin;\nvar w=this.state.width;\nvar rectwidth=w/dataset.length-.4;\nconst xScale=d3.scale.linear()\n        .domain([0,dataset.length])\n        .range([0,w])\nconst yScale=d3.scale.linear()\n        .domain([0,1])\n        .range([0,h])\nconst svg = d3.select(node).append(\"svg\").attr('height',h).attr('width',w)\nsvg.selectAll('rect')\n.data(dataset)\n.enter()\n.append('rect')\n.attr(\"x\",function(d,i){\n    return xScale(i);\n})\n.attr(\"y\",function(d){\n    return h - yScale(d);\n})\n.attr(\"width\",rectwidth)\n.attr(\"height\",function(d,i){\n    return yScale(d);\n})\n.attr('fill',\"green\");\n//---------------------------------------------------------\n\nd3.select(node).append(\"text\")    \n        .attr(\"x\", w/2 )\n        .attr(\"y\",  h + margin-2 )\n        .style(\"text-anchor\", \"middle\")\n        .style(\"font-size\",\".6em\")\n        .text(this.props.Aname);\n//Define Y axis\nvar yAxis = d3.svg.axis()\n      .scale(yScale)\n      .tickFormat(function (d) {\n          return d;\n      })\n      .orient(\"left\");\n//Create Y axis\nsvg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);      \n}\n\ncomponentDidMount() {\n    this.createBarchart()\n}\n  componentDidUpdate() {\n    this.createBarchart()\n  }\n      render() \n      {\n            return(\n            <svg ref={node => this.node = node} width={this.state.width} height={this.state.height}>\n            </svg> \n          )\n      }\n      }\nexport default Barchart"]},"metadata":{},"sourceType":"module"}