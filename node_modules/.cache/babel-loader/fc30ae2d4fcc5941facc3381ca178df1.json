{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js\";\nimport React, { Component } from 'react';\nimport Piechart from './Piechart';\nimport Listtest from './listtest';\nimport Row from './row';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset: [12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10, 12, 15, 18, 5, 10],\n      myrect: []\n    };\n    this.rowgen = this.rowgen.bind(this);\n  }\n\n  rowgen() {\n    var a = this.state.dataset.map((d, i) => React.createElement(\"rect\", {\n      key: i,\n      onClick: () => this.handleClick(d),\n      className: \"rec\",\n      fill: \"white\",\n      x: i * 18,\n      y: 0,\n      width: \"18\",\n      height: \"18\",\n      strokeWidth: \".1\",\n      stroke: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" \"));\n    this.setState({\n      myrect: a\n    });\n  }\n\n  render() {\n    // Destructuring is the process of getting things exactly by their name.\n    const dataset = this.state.dataset;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Piechart, {\n      dataset: dataset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Listtest, {\n      dataset: dataset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" \"), React.createElement(\"button\", {\n      onClick: this.rowgen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Rowgen\"), React.createElement(Row, {\n      dataset: \"Dataset1\",\n      data: this.state.myrect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Row, {\n      dataset: \"Dataset2\",\n      data: \"Data2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Row, {\n      dataset: \"Dataset3\",\n      data: \"Data3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Row, {\n      dataset: \"Dataset4\",\n      data: \"Data4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; //https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/","map":{"version":3,"sources":["/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js"],"names":["React","Component","Piechart","Listtest","Row","App","constructor","props","state","dataset","myrect","rowgen","bind","a","map","d","i","handleClick","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Piechart from './Piechart';\nimport Listtest from './listtest';\nimport Row from './row';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n  \n  super(props);\n  this.state = {\n    dataset: [12,15,18,5,10,12,15,18,5,10,12,15,18,5,10,12,15,18,5,10,12,15,18,5,10,12,15,18,5,10,12,15,18,5,10,12,15,18,5,10,12,15,18,5,10,12,15,18,5,10],\n    myrect:[]\n  }\n  this.rowgen=this.rowgen.bind(this);\n};\nrowgen(){\n    var a= this.state.dataset.map((d, i) => (<rect key={i} onClick={() => this.handleClick(d)} className=\"rec\" fill=\"white\" x={i*18} y={0} width='18' height=\"18\" strokeWidth=\".1\" stroke=\"black\" > </rect>))\n    this.setState({ myrect:a })\n  }\n  render() {\n// Destructuring is the process of getting things exactly by their name.\n    const { dataset } = this.state;\n    return (\n      <div className=\"App\">\n        <Piechart dataset={dataset} />\n        <Listtest dataset={dataset}> </Listtest>\n        <button onClick={this.rowgen}>Rowgen</button>\n        <Row dataset=\"Dataset1\" data={this.state.myrect}/>\n        <Row dataset=\"Dataset2\" data=\"Data2\"/>\n        <Row dataset=\"Dataset3\" data=\"Data3\"/>\n        <Row dataset=\"Dataset4\" data=\"Data4\"/>\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n//https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/\n"]},"metadata":{},"sourceType":"module"}