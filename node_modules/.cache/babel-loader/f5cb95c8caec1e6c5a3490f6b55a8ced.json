{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/Work-Projects/reorderable_matrix/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport HeatMap from './HeatMap';\nimport Popup from './Popup';\nimport $ from \"jquery\";\nimport * as algorithms from './algorithms'; //import * as d3 from 'd3'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sort_by_attributes = () => {\n      var a = this.state.groups.sort(function (a, b) {\n        return b.totalatt - a.totalatt;\n      });\n      this.setState({\n        sorted_groups: a\n      });\n    };\n\n    this.keyhandler = () => {\n      var a = this.state.key;\n      a++;\n      this.setState({\n        key: a\n      });\n    };\n\n    this.index2atrr = indexArray => {\n      var result = [];\n\n      for (var i = 0; i < indexArray.length; i++) {\n        //if(typeof(this.state.unionmade[indexArray[i]])!= \"undefined\"){\n        //console.log(this.state.unionmade[indexArray[i]])\n        result.push(this.state.unionmade[indexArray[i]]); //}\n      } //console.log(algorithms.matrixgen(result,this.state.mydata2))\n\n\n      return result;\n    };\n\n    this.classAdder = (id, class_name) => {\n      var element = document.getElementById(id); //element.style.fill = 'blue';\n\n      element.classList.add(class_name);\n    };\n\n    this.classRemover = (id, class_name) => {\n      var element = document.getElementById(id);\n      element.classList.remove(class_name);\n    };\n\n    this.state = {\n      viewgrouptracker: 2,\n      unionmade: [],\n      arr: [],\n      clickedA: [],\n      groups: [],\n      key: 0,\n      componentDidUpdatecounter: 0,\n      matrixdata: {},\n      sorted_groups: [],\n      mydata2: {},\n      popupdata: \"\",\n      popupdata2: \"\"\n    };\n    this.child_view = this.child_view.bind(this);\n    this.sort_by_dataset = this.sort_by_dataset.bind(this);\n    this.Unionmaker = this.Unionmaker.bind(this);\n    this.attribute_click_handler = this.attribute_click_handler.bind(this);\n    this.togglePopup = this.togglePopup.bind(this);\n    this.linedraw.bind = this.linedraw;\n    this.matrixgenerator.bind = this.matrixgenerator;\n    this.jsonHandler = this.jsonHandler.bind(this);\n  }\n\n  //----------------------------------------------------Union Maker\n  Unionmaker(mydata) {\n    var mySet = new Set();\n\n    for (var key in mydata) {\n      for (var i = 0; i < mydata[key].length; i++) {\n        mySet.add(mydata[key][i]);\n      }\n    }\n\n    return Array.from(mySet);\n  } //----------------------------------------------------------------------------------------------------------Child_view based on clicked attributes\n\n\n  child_view() {\n    this.linedraw();\n    this.keyhandler();\n    var mySet = new Set();\n\n    for (var i = 0; i < this.state.clickedA.length; i++) {\n      mySet.add(this.state.clickedA[i]);\n    }\n\n    var index = Array.from(mySet);\n    var combinations2 = algorithms.combinationgen2(index);\n    var groups_to_vis = [];\n    var grouped_datasets = algorithms.dataset_grouper(this.state.matrixdata.datasets, this.state.matrixdata.matrix, combinations2);\n\n    for (var j = 0; j < grouped_datasets.length; j++) {\n      if (grouped_datasets[j][1].length > 0) {\n        var a = React.createElement(HeatMap, {\n          count: j + 1,\n          key: String(this.state.key) + j,\n          gdatasets: grouped_datasets[j][1],\n          combinations: grouped_datasets[j][0],\n          display: \"child\",\n          mypopup: this.togglePopup,\n          clickedA: this.state.clickedA,\n          clickhandler: this.attribute_click_handler,\n          datasets: this.state.matrixdata,\n          commonA: this.state.unionmade,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n        groups_to_vis.push({\n          'item': a,\n          'totalatt': grouped_datasets[j][0].length,\n          'total_datasets': grouped_datasets[j][1].length\n        });\n      }\n\n      this.setState({\n        groups: groups_to_vis\n      });\n    }\n  } //--Sort groups According To datasets \n\n\n  sort_by_dataset() {\n    this.linedraw();\n    var a = this.state.groups.sort(function (a, b) {\n      return b.total_datasets - a.total_datasets;\n    });\n    this.setState({\n      sorted_groups: a\n    });\n  } //--Sort groups According To attributes \n\n\n  //-----------------------------------------------------attribute_click_handler starts here\n  attribute_click_handler(id, index, axis) {\n    //---------------To handle dataset clicks\n    if (axis == 'y') {\n      this.setState({\n        popupdata: id\n      }); //console.log(id)\n\n      this.togglePopup();\n    } else if (axis == 'popup2') {\n      this.setState({\n        popupdata2: id\n      });\n      this.togglePopup();\n    } else {\n      var arr = this.state.clickedA; //---------------To remove attributes from array\n\n      if (this.state.clickedA.includes(index)) {\n        arr = this.state.clickedA.filter(function (e) {\n          return e !== index;\n        });\n        this.classRemover(id, 'textcolor');\n      } else {\n        this.classAdder(id, 'textcolor');\n        arr.push(index);\n      }\n\n      this.setState({\n        clickedA: arr\n      }, () => {\n        // change Here to implement all attributes or selected attributes\n        if (this.state.viewgrouptracker == 2) {\n          this.child_view();\n        } else {\n          this.sort_by_dataset();\n        }\n      });\n    }\n  } //----------------------------------------------------- Class Adder\n\n\n  //----------------------------------------------------- togglePopup\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  } //---------------------------------------------------------------ComponentDidUpdate\n\n\n  componentDidUpdate(prevState, prevProp) {\n    this.linedraw();\n    return false;\n  } //---------------------------------------------------------------Line draw function starts here\n\n\n  linedraw() {\n    var selectedonly = true;\n\n    if (this.state.clickedA.length > 0) {\n      $(\"#\" + \"mySVG\").show();\n    } else {\n      $(\"#\" + \"mySVG\").hide();\n    }\n\n    $(\".\" + \"mylines\").remove();\n    var svgs = $(\".svgRectContainer\");\n    var IdArray = [];\n\n    for (var i = 0; i < svgs.length; i++) {\n      IdArray.push(svgs[i].id);\n    } // ------------------------------------------------------------Outer for loop for lines starts here\n\n\n    for (var i = 0; i < IdArray.length - 1; i++) {\n      var s1length = $(\"#\" + IdArray[i]).find(\".cell\").length; // only useful for else\n\n      var cellcount = 0;\n\n      if (selectedonly) {\n        // ------------------------------------------------------------number of lines to draw is determined here\n        for (var k = 0; k < this.state.clickedA.length; k++) {\n          var j = this.state.clickedA[k] + s1length - this.state.unionmade.length;\n          var s1c1 = $(\"#\" + IdArray[i] + \" #cell\" + j);\n          var s2c1 = $(\"#\" + IdArray[i + 1] + \" #cell\" + cellcount);\n          cellcount++;\n          var myline = IdArray[i] + j;\n          var x1 = $(s1c1).offset().left + $(s1c1).width() / 2;\n          var y1 = $(s1c1).offset().top + $(s1c1).height();\n          var y2 = $(s2c1).offset().top;\n\n          if ($(\".\" + myline).length == 0) {\n            $(\"#mySVG\").clone().addClass(myline).addClass(\"mylines\").insertBefore($(\"#mySVG\").css({\n              left: x1 - 2,\n              top: y1 + 3,\n              width: 1,\n              opacity: .8,\n              height: y2 - y1 - 5,\n              backgroundColor: \"rgb(158,154,200)\"\n            }));\n          }\n        }\n      } //if ends here\n      else {\n          for (var j = s1length - this.state.unionmade.length; j < s1length; j++) {\n            s1c1 = $(\"#\" + IdArray[i] + \" #cell\" + j);\n            s2c1 = $(\"#\" + IdArray[i + 1] + \" #cell\" + cellcount);\n            cellcount++;\n            myline = IdArray[i] + j;\n            var x1 = $(s1c1).offset().left + $(s1c1).width() / 2;\n            var y1 = $(s1c1).offset().top + $(s1c1).height();\n            var y2 = $(s2c1).offset().top;\n\n            if ($(\".\" + myline).length == 0) {\n              $(\"#mySVG\").clone().addClass(myline).addClass(\"mylines\").insertBefore($(\"#mySVG\").css({\n                left: x1 - 2,\n                top: y1 + 3,\n                width: 1,\n                opacity: .5,\n                height: y2 - y1 - 5,\n                backgroundColor: \"rgb(158,154,200)\"\n              }));\n            }\n          }\n        } //else ends here\n\n    }\n  } //------------------------------------------------------------- Json Handler starts Here\n\n\n  jsonHandler() {\n    const self = this;\n    var url = \"http://127.0.0.1:5000/json\";\n    var data = {\n      myrequest: 'data'\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(response => {\n      self.setState({\n        mydata2: response.datasets_with_Attributes\n      });\n      self.setState({\n        unionmade: response.only_shared_attributes\n      });\n      self.matrixgenerator();\n      return response;\n    }).catch(error => console.error('Error:', error));\n  } //-----------------------------------------------------ComponentDidmount\n\n\n  componentDidMount() {\n    this.jsonHandler();\n  }\n\n  matrixgenerator() {\n    var matrixdata = algorithms.matrixgen(this.state.unionmade, this.state.mydata2);\n    this.setState({\n      matrixdata: matrixdata\n    });\n  } //-----------------------------------------------------------------Render function starts here  \n\n\n  render() {\n    if (Object.keys(this.state.matrixdata).length > 0) {}\n\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.sort_by_dataset,\n      className: \"btn  btn-outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Sort by datasets\"), React.createElement(\"button\", {\n      onClick: this.sort_by_attributes,\n      className: \"btn  btn-outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Sort by attributes\"), React.createElement(\"button\", {\n      onClick: this.jsonHandler,\n      className: \"btn  btn-outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Process data\")), React.createElement(\"div\", {\n      className: \"matrix col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, Object.keys(this.state.matrixdata).length > 0 ? React.createElement(HeatMap, {\n      key: 'key1',\n      gdatasets: [],\n      display: \"main\",\n      clickhandler: this.attribute_click_handler,\n      datasets: this.state.matrixdata,\n      commonA: this.state.unionmade,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }) : \"NA\", this.state.groups.map((d, i) => {\n      if (this.state.clickedA.length > 0) {\n        return d.item;\n      } else {\n        $(\"#\" + \"mySVG\").hide();\n      }\n    }))), // pop up window starts here\n    this.state.showPopup ? React.createElement(Popup, {\n      data: this.state.popupdata2,\n      text: \"Close Me\",\n      closePopup: this.togglePopup.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }) : null //pop up window ends here\n    , React.createElement(\"div\", {\n      id: \"mySVG\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kaustav/Work-Projects/reorderable_matrix/src/App.js"],"names":["React","Component","HeatMap","Popup","$","algorithms","App","constructor","props","sort_by_attributes","a","state","groups","sort","b","totalatt","setState","sorted_groups","keyhandler","key","index2atrr","indexArray","result","i","length","push","unionmade","classAdder","id","class_name","element","document","getElementById","classList","add","classRemover","remove","viewgrouptracker","arr","clickedA","componentDidUpdatecounter","matrixdata","mydata2","popupdata","popupdata2","child_view","bind","sort_by_dataset","Unionmaker","attribute_click_handler","togglePopup","linedraw","matrixgenerator","jsonHandler","mydata","mySet","Set","Array","from","index","combinations2","combinationgen2","groups_to_vis","grouped_datasets","dataset_grouper","datasets","matrix","j","String","total_datasets","axis","includes","filter","e","showPopup","componentDidUpdate","prevState","prevProp","selectedonly","show","hide","svgs","IdArray","s1length","find","cellcount","k","s1c1","s2c1","myline","x1","offset","left","width","y1","top","height","y2","clone","addClass","insertBefore","css","opacity","backgroundColor","self","url","data","myrequest","fetch","method","body","JSON","stringify","headers","then","res","json","response","datasets_with_Attributes","only_shared_attributes","catch","error","console","componentDidMount","matrixgen","render","Object","keys","map","d","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport HeatMap from './HeatMap';\nimport Popup from './Popup';\nimport $ from \"jquery\"\nimport * as algorithms from './algorithms';\n//import * as d3 from 'd3'\nclass App extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    viewgrouptracker:2,\n    unionmade:[],\n    arr:[],\n    clickedA:[],\n    groups:[],\n    key:0,\n    componentDidUpdatecounter:0,\n    matrixdata:{},\n    sorted_groups:[],\n    mydata2: {},\n    popupdata:\"\",\n    popupdata2:\"\",\n  }\n this.child_view=this.child_view.bind(this);\n this.sort_by_dataset=this.sort_by_dataset.bind(this);\n this.Unionmaker=this.Unionmaker.bind(this);\n this.attribute_click_handler=this.attribute_click_handler.bind(this);\n this.togglePopup=this.togglePopup.bind(this);\n this.linedraw.bind=this.linedraw;\n this.matrixgenerator.bind=this.matrixgenerator;\n this.jsonHandler = this.jsonHandler.bind(this);\n};\n//----------------------------------------------------Union Maker\nUnionmaker(mydata){\n  var mySet= new Set();\n  for(var key in mydata){\n      for(var i=0;i<mydata[key].length;i++){\n          mySet.add(mydata[key][i]);\n      }\n      }\nreturn Array.from(mySet);\n}\n//----------------------------------------------------------------------------------------------------------Child_view based on clicked attributes\nchild_view(){\n  this.linedraw()\n  this.keyhandler();\n  var mySet=new Set();\n  for(var i=0;i<this.state.clickedA.length;i++){\n    mySet.add(this.state.clickedA[i])\n  }\n  var index=Array.from(mySet);\n  var combinations2=algorithms.combinationgen2(index);\n  var groups_to_vis=[];\nvar grouped_datasets=algorithms.dataset_grouper(this.state.matrixdata.datasets,this.state.matrixdata.matrix,combinations2,);\nfor(var j=0;j<grouped_datasets.length;j++){\n  if(grouped_datasets[j][1].length>0){\n  var a=  \n  <\n  HeatMap count={j+1} key={String(this.state.key)+j} gdatasets={grouped_datasets[j][1]} combinations={grouped_datasets[j][0]} \n  display='child' mypopup={this.togglePopup} clickedA={this.state.clickedA} clickhandler={this.attribute_click_handler} \n  datasets={this.state.matrixdata} commonA={this.state.unionmade}  \n  />\n\n  groups_to_vis.push({'item':a,'totalatt':grouped_datasets[j][0].length,'total_datasets':grouped_datasets[j][1].length});\n  }\n  this.setState({groups:groups_to_vis});\n}\n}\n//--Sort groups According To datasets \nsort_by_dataset(){\n  this.linedraw()\n  var a=this.state.groups.sort(function (a, b) {\n    return b.total_datasets - a.total_datasets;\n  });\n  this.setState({sorted_groups:a})\n}\n//--Sort groups According To attributes \nsort_by_attributes=()=>{\n  var a=this.state.groups.sort(function (a, b) {\n    return b.totalatt - a.totalatt;\n  });\n  this.setState({sorted_groups:a})\n}\n//--Key Handler\nkeyhandler=()=>{\n  var a=this.state.key;\n  a++;\n  this.setState({key:a})\n}\n//IndextoAttribute Generator function\nindex2atrr=(indexArray)=>{\n  var result=[];\n  for(var i=0;i<indexArray.length;i++){\n    //if(typeof(this.state.unionmade[indexArray[i]])!= \"undefined\"){\n      //console.log(this.state.unionmade[indexArray[i]])\n      result.push(this.state.unionmade[indexArray[i]]);\n    //}\n  }\n//console.log(algorithms.matrixgen(result,this.state.mydata2))\nreturn result;\n}\n//-----------------------------------------------------attribute_click_handler starts here\nattribute_click_handler(id,index,axis){\n//---------------To handle dataset clicks\nif(axis=='y'){\n  this.setState({popupdata:id})\n  //console.log(id)\n  this.togglePopup();\n}\nelse if(axis=='popup2'){\n  this.setState({popupdata2:id})\n  this.togglePopup();\n}\nelse{\n  var arr=this.state.clickedA;\n  //---------------To remove attributes from array\n  if(this.state.clickedA.includes(index)){\n    arr = this.state.clickedA.filter(function(e) { return e !== index })\n    this.classRemover(id,'textcolor');\n  }\n  else{\n    this.classAdder(id,'textcolor')\n    arr.push(index)\n  }\n  this.setState({clickedA:arr},()=>{\n// change Here to implement all attributes or selected attributes\n    if(this.state.viewgrouptracker==2){\n      this.child_view();\n    }\n    else{\n      this.sort_by_dataset();\n    }\n  })\n}\n  }\n//----------------------------------------------------- Class Adder\nclassAdder = (id,class_name)=>{\nvar element = document.getElementById(id);\n//element.style.fill = 'blue';\nelement.classList.add(class_name);\n}\n//----------------------------------------------------- Class Remover\nclassRemover = (id,class_name)=>{\n  var element = document.getElementById(id);\n  element.classList.remove(class_name);\n  }  \n//----------------------------------------------------- togglePopup\ntogglePopup(){\n  this.setState({\n    showPopup: !this.state.showPopup\n  });\n}\n//---------------------------------------------------------------ComponentDidUpdate\ncomponentDidUpdate(prevState,prevProp){\n  this.linedraw()\n  return false;  \n}\n//---------------------------------------------------------------Line draw function starts here\nlinedraw(){\n  var selectedonly=true;\n  if(this.state.clickedA.length>0){\n    $(\"#\"+\"mySVG\").show();\n  }\n  else{\n    $(\"#\"+\"mySVG\").hide();\n  }\n  $(\".\"+\"mylines\").remove();\nvar svgs=$(\".svgRectContainer\"); var IdArray=[]; for(var i=0;i<svgs.length;i++){ IdArray.push(svgs[i].id)}\n// ------------------------------------------------------------Outer for loop for lines starts here\n  for(var i=0;i<IdArray.length-1;i++){\n    var s1length=$(\"#\"+IdArray[i]).find( \".cell\" ).length; // only useful for else\n    var cellcount=0;\n    if(selectedonly){\n// ------------------------------------------------------------number of lines to draw is determined here\n  for(var k=0;k<this.state.clickedA.length;k++){\n    var j=this.state.clickedA[k]+s1length-this.state.unionmade.length;\n    var s1c1=$(\"#\"+IdArray[i]+\" #cell\"+j);\n    var s2c1=$(\"#\"+IdArray[i+1]+\" #cell\"+cellcount);\n    cellcount++;\n    var myline=IdArray[i]+j;\n    var x1 = $(s1c1).offset().left + ($(s1c1).width()/2);\n    var y1 = $(s1c1).offset().top + ($(s1c1).height());\n    var y2 = $(s2c1).offset().top;\n    if($(\".\"+myline).length==0){\n      $(\"#mySVG\").clone().addClass(myline).addClass(\"mylines\").insertBefore($(\"#mySVG\").css({left:x1-2,top:y1+3,width:1,opacity:.8,height:y2-y1-5,backgroundColor:\"rgb(158,154,200)\"})); \n    }  \n  }    \n}\n//if ends here\nelse{\n    for(var j=s1length-this.state.unionmade.length;j<s1length;j++){\ns1c1=$(\"#\"+IdArray[i]+\" #cell\"+j);\ns2c1=$(\"#\"+IdArray[i+1]+\" #cell\"+cellcount);\ncellcount++;\nmyline=IdArray[i]+j;\nvar x1 = $(s1c1).offset().left + ($(s1c1).width()/2);\nvar y1 = $(s1c1).offset().top + ($(s1c1).height());\nvar y2 = $(s2c1).offset().top;\nif($(\".\"+myline).length==0){\n  $(\"#mySVG\").clone().addClass(myline).addClass(\"mylines\").insertBefore($(\"#mySVG\").css({left:x1-2,top:y1+3,width:1,opacity:.5,height:y2-y1-5,backgroundColor:\"rgb(158,154,200)\"})); \n}  \n}  \n} \n//else ends here\n}\n  }\n//------------------------------------------------------------- Json Handler starts Here\njsonHandler(){\nconst self=this;\nvar url = \"http://127.0.0.1:5000/json\";\nvar data = {myrequest: 'data'};\nfetch(url, {\n  method: 'POST', \n  body: JSON.stringify(data),\n  headers:{\n    'Content-Type': 'application/json'\n  }\n}).then(res => res.json())\n.then(response => {\n  self.setState({mydata2:response.datasets_with_Attributes})\n  self.setState({unionmade:response.only_shared_attributes})\n  self.matrixgenerator()\n  return response;\n}).catch(error => console.error('Error:', error));\n}\n//-----------------------------------------------------ComponentDidmount\ncomponentDidMount(){\n  this.jsonHandler();\n}\nmatrixgenerator(){\n  var matrixdata=algorithms.matrixgen(this.state.unionmade,this.state.mydata2);\n  this.setState({matrixdata:matrixdata})\n}\n\n//-----------------------------------------------------------------Render function starts here  \nrender() {\n  if(Object.keys(this.state.matrixdata).length>0){\n  }\n    return (\n     <div className=\"container-fluid\">\n        <div className=\"row\">\n              <div className=\"col-3\">\n              <button onClick={this.sort_by_dataset} className=\"btn  btn-outline-secondary\">Sort by datasets</button>\n              <button onClick={this.sort_by_attributes} className=\"btn  btn-outline-secondary\">Sort by attributes</button>\n              <button onClick={this.jsonHandler} className=\"btn  btn-outline-secondary\">Process data</button>\n              </div>\n              <div className=\"matrix col-9\">\n              \n              {\n                  (Object.keys(this.state.matrixdata).length>0)?<HeatMap key={'key1'} gdatasets={[]} display='main' clickhandler={this.attribute_click_handler} datasets={this.state.matrixdata} commonA={this.state.unionmade} />:\"NA\"\n              }\n              { \n                this.state.groups.map( (d,i)=> {\n                  if(this.state.clickedA.length>0){return d.item}\n                  else{$(\"#\"+\"mySVG\").hide();}\n                })  \n              }\n              </div>\n        </div>      \n      { // pop up window starts here\n        this.state.showPopup ? \n          <Popup\n            data={this.state.popupdata2}\n            text='Close Me'\n            closePopup={this.togglePopup.bind(this)}\n          />\n          : null\n       //pop up window ends here\n       }\n      <div id=\"mySVG\">\n      </div>\n    </div>\n    );\n  }\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}