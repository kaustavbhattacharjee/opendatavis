{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/Work-Projects/reorderable_matrix/src/Popup.js\";\nimport React, { Component } from 'react';\nimport Barchart from './Barchart';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: {},\n      number_of_datasets: 1,\n      dataset: [5, 10, 12, 15, 18, 22, 25, 12, 35, 18, 5, 40, 12, 35, 18, 55, 10, 112, 75, 18, 65, 110, 112, 55, 68, 15, 110, 122, 125, 118, 5, 10, 12, 15, 18, 22, 25, 12, 35, 18, 5, 40],\n      probdiv: {}\n    };\n    this.jsonHandler2 = this.jsonHandler2.bind(this);\n    this.creatdis = this.creatdis.bind(this);\n  }\n\n  jsonHandler2() {\n    const self = this;\n    var url = \"http://127.0.0.1:5000/json2\";\n    var data = {\n      datasets: this.props.data\n    }; //console.log(data)\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(response => {\n      self.setState({\n        result: response\n      }, () => {\n        this.creatdis();\n      }); //console.log(response)\n\n      return response;\n    }).catch(error => console.error('Error:', error));\n  }\n\n  creatdis() {\n    var len = Object.keys(this.state.result).length;\n    console.log(len);\n\n    if (len > 0) {\n      this.setState({\n        number_of_datasets: len\n      });\n      var temp = {};\n\n      for (var i in this.state.result) {\n        var res = this.state.result;\n        var arr = [];\n        Object.keys(this.state.result[i]).map(function (key, index) {\n          //console.log(key,res[i][key])\n          arr.push(React.createElement(Barchart, {\n            dataset: res[i][key],\n            Aname: key,\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }));\n        });\n        temp[i] = arr;\n      } //console.log(temp)\n\n\n      this.setState({\n        probdiv: temp\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.jsonHandler2();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    if (Object.keys(this.state.probdiv).length > 0) {\n      this.props.data.map(d => {\n        console.log(d);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popup_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      onClick: this.props.closePopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"close\")), React.createElement(\"div\", {\n      className: \"popdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.data.map(d => {\n      var a = \"col-sm-\" + 12 / this.props.data.length;\n      return React.createElement(\"div\", {\n        className: a,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" \", d, \" \"), this.state.probdiv[d]);\n    })))));\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/kaustav/Work-Projects/reorderable_matrix/src/Popup.js"],"names":["React","Component","Barchart","Popup","constructor","props","state","result","number_of_datasets","dataset","probdiv","jsonHandler2","bind","creatdis","self","url","data","datasets","fetch","method","body","JSON","stringify","headers","then","res","json","response","setState","catch","error","console","len","Object","keys","length","log","temp","i","arr","map","key","index","push","componentDidMount","componentDidUpdate","render","d","closePopup","a"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Barchart from './Barchart';\nclass Popup extends React.ComponentÂ {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result:{},\n      number_of_datasets:1,\n      dataset: [5,10,12,15,18,22,25,12,35,18,5,40,12,35,18,55,10,112,75,18,65,110,112,55,68,15,110,122,125,118,5,10,12,15,18,22,25,12,35,18,5,40],\n    probdiv:{},\n    }\nthis.jsonHandler2 = this.jsonHandler2.bind(this);\nthis.creatdis = this.creatdis.bind(this);\n  }\n  jsonHandler2(){\n    const self=this;\n    var url = \"http://127.0.0.1:5000/json2\";\n    var data = {datasets: this.props.data};\n    //console.log(data)\n    fetch(url, {\n      method: 'POST', \n      body: JSON.stringify(data),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json())\n    .then(response => {\n      self.setState({result:response},()=>{\n        this.creatdis();\n      })\n      //console.log(response)\n      return response;\n    }).catch(error => console.error('Error:', error));\n  }\n  creatdis(){\n    var len=Object.keys(this.state.result).length;\n    console.log(len)\n    if(len>0){\n      this.setState({number_of_datasets:len})\n      var temp={}\n      for(var i in this.state.result){\n        var res=this.state.result;\n        var arr=[]\n        Object.keys(this.state.result[i]).map(function(key, index) {\n          //console.log(key,res[i][key])\n          arr.push(<Barchart dataset={res[i][key]} Aname={key} key={i}></Barchart>)\n        });\n       temp[i]=arr;         \n      }\n      //console.log(temp)\n      this.setState({probdiv:temp})\n    }\n  }\n  componentDidMount(){\n    this.jsonHandler2()\n  }\n  componentDidUpdate(){\n  }\n    render() { \n      if(Object.keys(this.state.probdiv).length>0){\n      this.props.data.map(d=>{\n        console.log(d)\n      })\n    }\n      return (\n        <div className='popup'>\n          <div className='popup_inner'>\n          <button className=\"btn btn-info\" onClick={this.props.closePopup}>close</button>\n          </div>\n          <div className=\"popdiv\">\n{/* conatiner starts here */}\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n              this.props.data.map(d=>{\n              var a=\"col-sm-\"+12/this.props.data.length;\n              return <div className={a}>\n                        <div> {d} </div>\n                        {this.state.probdiv[d]}\n                      </div>\n                  })\n              }\n              </div>    \n            </div>\n            </div>\n{/* conatiner ends here */}\n          </div>\n          \n        \n      );\n    }\n  }\n  export default Popup;"]},"metadata":{},"sourceType":"module"}