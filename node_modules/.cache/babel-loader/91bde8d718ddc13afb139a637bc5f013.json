{"ast":null,"code":"var _jsxFileName = \"/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js\";\nimport React, { Component } from 'react';\nimport Row from './row';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasets: {\n        dataset2: ['A', 'B', 'C', 'D', 'E'],\n        dataset3: ['A', 'BB', 'CC', 'DD', 'EE'],\n        dataset4: ['AAA', 'BBB', 'CCC', 'DDD', 'B']\n      },\n      allatt: ['A', 'B', 'C', 'D', 'E', 'BB', 'CC', 'DD', 'EE', 'AA', 'BB', 'CC', 'DD', 'EE', 'AAA', 'BBB'],\n      idata: [],\n      myrect: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.rowgen = this.rowgen.bind(this);\n  }\n\n  //----------------------------------------------------Handle click starts here\n  handleClick(d) {\n    var data = this.state.idata;\n    var mydata = [...data, d]; // setstate starts here\n\n    this.setState({\n      idata: mydata\n    }, () => {\n      console.log('Inside');\n\n      for (var key in this.state.datasets) {\n        this.rowgen(this.state.idata, key, this.state.datasets[key]);\n      }\n    });\n  } //----------------------------------------------------Row generator starts here\n\n\n  rowgen(idata, datasetname, dataset) {\n    var a = [];\n    a.push(React.createElement(Row, {\n      idata: idata,\n      allatt: this.state.allatt,\n      dataset: datasetname,\n      data: dataset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n    this.setState(prevState => ({\n      myrect: [...prevState.myrect, a]\n    }));\n  } //----------------------------------------------------componentDidmount starts here\n\n\n  componentDidMount() {\n    this.handleClick('');\n  } //----------------------------------------------------render starts here\n\n\n  render() {\n    ++this.mykey;\n    const width = 960;\n    const height = 26; //console.log(this.state.datasets)\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      key: this.mykey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.cdata.map((d, i) => React.createElement(\"text\", {\n      key: i,\n      x: i * 30,\n      y: 20,\n      width: \"38\",\n      height: \"26\",\n      strokeWidth: \".1\",\n      stroke: \"black\",\n      onClick: () => this.handleClick(d),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, d)))), this.state.myrect);\n  } //----------------\n\n\n}\n\nexport default App; //https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/","map":{"version":3,"sources":["/Users/mr.mamun/Downloads/attribute-click-event/dist/reorderablemat/src/App.js"],"names":["React","Component","Row","App","constructor","props","state","datasets","dataset2","dataset3","dataset4","allatt","idata","myrect","handleClick","bind","rowgen","d","data","mydata","setState","console","log","key","datasetname","dataset","a","push","prevState","componentDidMount","render","mykey","width","height","cdata","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Row from './row';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    datasets: {\n              dataset2: ['A','B','C','D','E'],\n              dataset3: ['A','BB','CC','DD','EE'],\n              dataset4: ['AAA','BBB','CCC','DDD','B'],\n              },\n    allatt: ['A','B','C','D','E','BB','CC','DD','EE','AA','BB','CC','DD','EE','AAA','BBB'],\n    idata:[],\n    myrect:[]\n  }\n  this.handleClick=this.handleClick.bind(this);\n  this.rowgen=this.rowgen.bind(this);\n};\n//----------------------------------------------------Handle click starts here\nhandleClick(d){\n  var data = this.state.idata;\n  var mydata=[...data,d]\n// setstate starts here\n  this.setState({idata: mydata},()=>{\n    console.log('Inside')\n    for(var key in this.state.datasets){\n      this.rowgen(this.state.idata,key,this.state.datasets[key]);  }\n  });\n}\n//----------------------------------------------------Row generator starts here\nrowgen(idata,datasetname,dataset){\n  var a=[];\n  a.push(<Row idata={idata} allatt={this.state.allatt} dataset={datasetname} data={dataset}/>)\n  this.setState(prevState => ({\n    myrect: [...prevState.myrect, a] \n  }));\n}\n//----------------------------------------------------componentDidmount starts here\ncomponentDidMount(){\n  this.handleClick('');\n}\n//----------------------------------------------------render starts here\n  render() {\n    ++this.mykey;\n    const width = 960;\n    const height = 26;\n    //console.log(this.state.datasets)\n    return (\n      <div className=\"App\" key={this.mykey}>\n        <div className=\"Cell\">\n        <svg width={width} height={height}>  \n        {\n          this.state.cdata.map((d, i) => (<text key={i} x={i*30} y={20} width='38' height=\"26\" strokeWidth=\".1\" stroke=\"black\" onClick={() => this.handleClick(d)}>{d}</text>))\n        }\n        </svg>\n        </div>\n        {this.state.myrect}\n      </div>\n    );\n  }\n//----------------\n}\nexport default App;\n\n\n\n\n\n\n//https://www.dummies.com/web-design-development/css3/using-the-div-tag-to-create-tables/\n"]},"metadata":{},"sourceType":"module"}